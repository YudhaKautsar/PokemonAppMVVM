package com.yudha.pokemonapp.domain.entity

/**
 * Domain User Entity - Core business object
 * This represents the User in the business domain, independent of any framework or database
 */
data class User(
    val id: UserId,
    val username: Username,
    val email: Email,
    val profile: UserProfile
) {
    companion object {
        fun create(
            username: String,
            email: String,
            fullName: String? = null,
            phoneNumber: String? = null,
            profileImagePath: String? = null
        ): User {
            return User(
                id = UserId.generate(),
                username = Username(username),
                email = Email(email),
                profile = UserProfile(
                    fullName = fullName,
                    phoneNumber = phoneNumber,
                    profileImagePath = profileImagePath
                )
            )
        }
    }
}

/**
 * Value Objects for User domain
 */
@JvmInline
value class UserId(val value: Long) {
    companion object {
        fun generate(): UserId = UserId(0) // Will be generated by database
        fun of(value: Long): UserId = UserId(value)
    }
}

@JvmInline
value class Username(val value: String) {
    init {
        require(value.isNotBlank()) { "Username cannot be blank" }
        require(value.length >= 3) { "Username must be at least 3 characters" }
        require(value.length <= 50) { "Username must not exceed 50 characters" }
    }
}

@JvmInline
value class Email(val value: String) {
    init {
        require(value.isNotBlank()) { "Email cannot be blank" }
        require(android.util.Patterns.EMAIL_ADDRESS.matcher(value).matches()) {
            "Invalid email format"
        }
    }
}

data class UserProfile(
    val fullName: String? = null,
    val phoneNumber: String? = null,
    val profileImagePath: String? = null,
    val createdAt: Long = System.currentTimeMillis()
)